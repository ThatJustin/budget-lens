name: Kotlin Frontend CI Workflow

# Controls when the workflow will run
on:
  # Allows us to call this workflow within another workflow
  workflow_call:
  # Allows us to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggered based on the git event type
  pull_request:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v2.3.2
        
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: 11
      # local.properties
      - name: Touch local properties
        run: touch local.properties
      # Run Unit Tests and Code Coverage
      - name: Debug Unit Tests and Code Coverage
        run: |
          ./gradlew app testDebugUnitTest app connectedCheck
      # Upload Unit Tests Report
      - name: Unit Tests Report Upload
        uses: actions/upload-artifact@v2
        with:
          name: app_unit_test
          path: app/build/reports/tests/testDebugUnitTest
      # Upload Android Instrumented Tests Report
      - name: Android Instrumented Tests Report Upload
        uses: actions/upload-artifact@v2
        with:
          name: app_android_instrumented_test
          path: app/build/reports/androidTests/connected
      # Upload Code Coverage Report
      - name: Code Coverage Report Upload
        uses: actions/upload-artifact@v2
        with:
          name: app_code_coverage
          path: app/build/reports/coverage/androidTest/debug/connected
      # Upload APK
      - name: APK Upload
        uses: actions/upload-artifact@v2
        with:
          name: BudgetLens App
          path: app/build/outputs/apk/debug/app-debug.apk
      # Run a linter
      - name: Run Lint
        run: |
          ./gradlew Lint
  tests:
    runs-on: macos-latest
    needs: build
    steps:
      # Run an Emulator to Run Automated Android Instrumented Tests
      - name: Android Emulator Runner for Automated Android Instrumented Tests
        uses: ReactiveCircus/android-emulator-runner@v2.27.0
        with:
          api-level: 31
          arch: x86_64
          profile: Pixel 4 API 31
          disable-animations: true
          script: ./gradlew connectedAndroidTest
