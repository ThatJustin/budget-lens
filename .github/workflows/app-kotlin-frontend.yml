name: Kotlin Frontend CI Workflow

# Controls when the workflow will run
on:
  # Allows us to call this workflow within another workflow
  workflow_call:
  # Allows us to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggered based on the git event type
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v2.3.2
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: 8
      # Execute unit tests
      - name: Unit Test with Android Emulator Runner
        uses: ReactiveCircus/android-emulator-runner@v2.14.3
        with:
          api-level: 29
          script: |
            ./gradlew connectedCheck
      # Debug Unit Tests
      - name: Debug Unit Tests with Android Emulator Runner
        run: |
          ./gradlew testDebugUnitTest
      # Generate code coverage report
      - name: Generate Code Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: Code Coverage Report
          path: app/build/reports/coverage/debug
      # Generate test coverage reports
      - name: Download Test Coverage Reports Folder
        uses: actions/download-artifact@v2
        with:
          name: Test Coverage Report
          path: app/build/reports/coverage/debug
      # Build the app
      - name: Build with Gradle
        run: |
          ./gradlew build
      # Upload the build artifact (APK)
      - name: Upload APK
        uses: actions/upload-artifact@v2.1.4
        with:
          name: BudgetLens App
          path: app/build/outputs/apk/debug/app-debug.apk
      # Run Tests
      - name: Run Tests
        run: |
          ./gradlew test
      # Run a linter
      - name: Run Lint
        run: |
          ./gradlew lintKotlin
      # Build/Assemble the app
      - name: Build Project
        run: |
          ./gradlew assemble